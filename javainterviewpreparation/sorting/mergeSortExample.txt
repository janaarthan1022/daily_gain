package javaInterviewPreparation2024.mergeSort;

import java.util.Arrays;

public class MergeSortExample {

	public static void main(String[] args) {
		int[] input = { 6, 3, 9, 4, 1, 0 };
		System.out.println("Input array = " + Arrays.toString(input));
		System.out.println("Sorted array = " + Arrays.toString(mergeSort(input)));

	}

	public static int[] merge(int[] ar1, int[] ar2) {
		int[] combined = new int[ar1.length + ar2.length];
		int index = 0;
		int i = 0;
		int j = 0;
		while (i < ar1.length && j < ar2.length) {
			if (ar1[i] < ar2[j]) {
				combined[index] = ar1[i];
				index++;
				i++;
			} else {
				combined[index] = ar2[j];
				index++;
				j++;
			}
		}
		while (i < ar1.length) {
			combined[index] = ar1[i];
			index++;
			i++;
		}
		while (j < ar2.length) {
			combined[index] = ar2[j];
			index++;
			j++;
		}
		return combined;
	}

	public static int[] mergeSort(int[] ar) {
		if (ar.length == 1)
			return ar;
		int mid = ar.length / 2;
		int[] left = mergeSort(Arrays.copyOfRange(ar, 0, mid));
		int[] right = mergeSort(Arrays.copyOfRange(ar, mid, ar.length));
		return merge(left, right);
	}

}


OUtput:
Input array = [6, 3, 9, 4, 1, 0]
Sorted array = [0, 1, 3, 4, 6, 9]


Time complexity = O (n log n)
