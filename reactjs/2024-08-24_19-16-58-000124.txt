File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/public/index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>TODO App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/public/manifest.json
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/public/robots.txt
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/package-lock.json
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/package.json
{
  "name": "todo-app",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/reportWebVitals.js
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/App.css
.App {
  text-align: center;
  color: blue;
}

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/index.css
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/components/learning-examples/FirstComponent.jsx
export default function FirstComponent() {
    return (
      <div className='FirstComponent'>First Component</div>
    );
  }

  export function FifthComponent() {
    return (
      <div className='FifthComponent'>Fifth Component</div>
    );
  }
=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/components/learning-examples/ThirdComponent.jsx
import { Component } from 'react';

export default class ThirdComponent extends Component{
    render() {
      return (
        <div className='ThirdComponent'>Third Component</div>
      );
    }
  }
=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/components/learning-examples/LearningJavascript.jsx
const person = {
    name : 'Janaarthan',
    address: {
        door:'4/BN-76',
        street:'Balaji Nagar',
        village:'Kalangal',
        taluk:'Sulur',
        district:'Coimbatore',
        pincode:'641402',
        state:'Tamil Nadu',
        country:'India'
    },
    vehicles:['3105', '6329', '1983'],
    consoleLogPrinter : () => {
        console.log("Console log print test " + person.vehicles[0])
    }
}




export default function LearningJavascript () {
    return (
        <>
        <div><h1>Learning Javascript</h1></div>
        <h3>{person.name}</h3>
        <h4>{person.address.door},{person.address.street}</h4>
        <h4>{person.address.village},{person.address.taluk}</h4>
        <h4>{person.address.district}-{person.address.pincode}</h4>
        <h4>{person.address.state},{person.address.country}</h4>
        <h3>Vehicle Details</h3>
        <h4>{person.vehicles[0]},{person.vehicles[1]},{person.vehicles[2]}</h4>
        {person.consoleLogPrinter()}
        </>
    );
}
=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/components/learning-examples/LearningComponent.jsx
import { Component } from 'react';
import FirstComponent, {FifthComponent} from './FirstComponent';
import ThirdComponent from './ThirdComponent';
import LearningJavascript from './LearningJavascript';

export default function LearningComponent() {
    return (
      <div className="App">
        <h1><FirstComponent></FirstComponent></h1>
        <h2><SecondComponent></SecondComponent></h2>
        <h3><ThirdComponent></ThirdComponent></h3>
        <h4><FifthComponent></FifthComponent></h4>
        <br></br>
        <hr></hr>
        <LearningJavascript></LearningJavascript>
      </div>
    );
  }

  function SecondComponent() {
    return (
      <div className='SecondComponent'>Second Component</div>
    );
  }
=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/App.test.js
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/setupTests.js
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

=========================================================
File Name :::::::::::/Users/janaarthanm/Documents/nomad_path/upskill/fullstack/todo-app/src/App.js
import logo from './logo.svg';
import './App.css';
import LearningComponent from './components/learning-examples/LearningComponent';

function App() {
  return (
    <div className="App">
      <LearningComponent></LearningComponent>
    </div>
  );
}

function SecondComponent() {
  return (
    <div className='SecondComponent'>Second Component</div>
  );
}


export default App;

=========================================================
